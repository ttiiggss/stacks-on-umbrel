version: "3.5"
services:
  postgres:
    image: postgres:${POSTGRES_VERSION:-13}-alpine
    container_name: postgres
    restart: on-failure
    env_file:
      - ${SCRIPTPATH}/.env
    environment:
      - POSTGRES_PASSWORD=${PG_PASSWORD:-postgres}
    networks:
      - default
    profiles:
      - event-replay
      - stacks-blockchain
  stacks-blockchain:
    image: ceramicwhite/stacks-blockchain:v2.05.0.3.0@sha256:953db9197b4615345f7e096d9e7b3a1b27a759a32a4be3190f6822064aa2dd18
    container_name: stacks-blockchain
    restart: on-failure
    ports:
      - ${STACKS_CORE_RPC_PORT:-20443}:${STACKS_CORE_RPC_PORT:-20443}
      - ${STACKS_CORE_P2P_PORT:-20444}:${STACKS_CORE_P2P_PORT:-20444}
    env_file:
      - ${SCRIPTPATH}/.env
    networks:
      - default
    depends_on:
      - stacks-blockchain-api
    profiles:
      - stacks-blockchain
    command:
      [
        "/bin/stacks-node",
        "start",
        "--config",
        "/src/stacks-blockchain/Config.toml",
      ]
  stacks-blockchain-api:
    image: ceramicwhite/stacks-blockchain-api:v5.0.1@sha256:b7fb9fa5b1a7d65e583f2e2d9f10c8e20b31303772c4bd8734ad31618e4d86e9
    container_name: stacks-blockchain-api
    restart: always
    ports:
      - ${STACKS_BLOCKCHAIN_API_PORT:-3999}:${STACKS_BLOCKCHAIN_API_PORT:-3999}
    env_file:
      - ${SCRIPTPATH}/.env
    networks:
      - default
    depends_on:
      - postgres
    profiles:
      - event-replay
      - stacks-blockchain
    command: ["npm", "run", "start"]
networks:
  default:
    name: ${DOCKER_NETWORK}
    ipam:
      driver: default
